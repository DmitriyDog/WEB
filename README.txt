Веб-приложение для отметки просмотренных/прочитанных книг и фильмов.

Для создания использованы библиотеки Flask, Flask-Login, json, WTForms, Flask-WTF, Werkzeug, Jinja и SQLAlchemy.
Также присутсвует os, но только для развертывания приложения на heroku.
Для пользования приложение созданы две таблицы(пользователей и развлечений) в базе данных + 1 ассоциативная. 
В веб-приложении присутсвуют части закрытые для незарегистрированных пользователей: профиль и выбор оценки на
стрничке каждого блока. Вся информация о книгах, сериалах и фильмах хранится в entertain.json. Таблицы хранятся
в libs.db. Пароль каждого пользователя хранится в хэшированном виде.
Для flask форм регистрации, логина и выставления рейтинга присутсвуют отдельные файлы loginform.py и Rate.py.
Базу данных сайта о развлечения можно посмотреть по категориям. Её видно вне зависимости от состояния входа на сайт. Все наименования выведены в алфавитном порядке. Возможность сортировки пользователем отсутсвует.
При регистрации пользователь переходит в свой пустой профиль (информацию "обо мне" после регистрации изменить нельзя). Там вверху изображен никнейм, ниже дата регистрации с точностью до дня и еще ниже виден пустой список.
При оценке чего-то, туда будут добавлятся новые позиции с возможностью перехода на страницу продукта. При оценке "не завершено" позиция будет пропадать из списка в профиле.
Средняя оценка книги/сериала/фильма высчитывается как среднее значение оценок всех пользователей. Свою оценку можно изменить в любой момент.
При регистрации можно указать любую почту, которой еще нет в базе данных сайта), любой никнейм и любой пароль.
На самом деле, можно залить любой продукт лишь с помощью добавления в соответсующию категорию такого в entertainment.json, что довольно удобно. Желательно при этом еще добавить картинку.
Характеристики (в entertainment.json) у книг, фильмов и сериалов немного отличаются. Например, у фильма указана страна создания, а у книги - автор. Это сделано с помощью цикла for в html файлах с помощью Jinja.
На сайте повсеместно используется Bootstrap 4.0.0 и необходимые для его функционирования скрипты (например, для выпадающих вариантов кнопки "База Данных" навигационной панели сайта). Почти на каждой странице используется способ разметки Bootstrap с помощью колон и рядов. Используются цвета текста Bootstrap.
Из Flask-WTForms используются кнопки для отправки "POST" на сервер и подтверждения чего бы то ни было (оценки или регистрации). Также используются BooleanField, StringField, EmailField, TextAreaField и PasswordField.
Для оценки используется Selectfield.